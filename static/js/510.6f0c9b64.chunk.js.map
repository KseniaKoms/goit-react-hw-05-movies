{"version":3,"file":"static/js/510.6f0c9b64.chunk.js","mappings":"yNACA,EAAuB,wBAAvB,EAAsD,wB,SCIhDA,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CACEC,GAAE,kBAAaN,GACfO,MAAO,CAAEC,KAAMN,GACfE,UAAWC,EAHb,SAKGJ,OAMT,IAEAF,EAAUU,SAAW,CACnBT,GAAIU,IAAAA,OAAAA,WACJT,MAAOS,IAAAA,OAAAA,YCpBT,IAAMC,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,wBACGA,EAAMC,KAAI,YAAoB,IAAjBb,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChB,OAAO,SAAC,EAAD,CAAWD,GAAIA,EAAaC,MAAOA,GAAXD,SAMvC,IAEAW,EAAWF,SAAW,CACpBT,GAAIU,IAAAA,OAAAA,WACJT,MAAOS,IAAAA,OAAAA,a,0MChBTI,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACJF,IAAAA,IAAA,sCAAyCC,IADrC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,IAAAA,IAAA,gCACIC,EADJ,kBACiBM,IAFZ,cACtBJ,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,sDAOdG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAuCR,IADlC,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdM,EAAc,mCAAG,WAAMD,GAAN,uFACLT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKO,MAFO,2CAAH,sDAKdC,EAAc,mCAAG,WAAMH,GAAN,uFACLT,IAAAA,IAAA,iBAAoBS,EAApB,4BAA+CR,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,uD,6JC1B3B,EAAuB,qB,SC6DvB,MAvDA,WAAmB,IAAD,EAChB,GAAsCQ,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAoCP,EAAAA,EAAAA,UAASM,GAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVJ,EAAJ,CAGA,IAAMK,EAAY,mCAAG,8GAEIlB,EAAAA,EAAAA,IAAea,GAFnB,UAEXM,EAFW,OAGjBV,EAAeU,GACO,IAAlBA,EAAOC,OAJM,yCAKRC,EAAAA,OAAAA,QAAA,wCAAgDN,KALxC,uDAQjBO,QAAQC,IAAI,KAAMC,SARD,yDAAH,qDAWlBN,OACC,CAACL,EAAOE,KAgBT,4BACE,kBAAMU,SAXW,SAAAC,GACnBA,EAAMC,iBACa,KAAfZ,EAIJH,EAAgB,CAAEC,MAAOE,IAHvBM,EAAAA,OAAAA,QAAe,2BAQerC,UAAWC,EAAzC,WACE,kBACE2C,KAAK,OACLC,KAAK,SACLC,MAAOf,EACPgB,YAAY,eACZC,SArBa,SAAAN,GACnBV,EAAcU,EAAMO,OAAOH,MAAMI,mBAsB7B,mBAAQN,KAAK,SAAb,uBAEDpB,EAAYY,OAAS,GAAKP,IAAS,SAACtB,EAAA,EAAD,CAAYC,MAAOgB","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","services/FilmApi.js","webpack://goit-react-hw-05-movies/./src/views/Movies/Movies.module.css?58de","views/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieItem_link__mit6j\",\"item\":\"MovieItem_item__iPuYx\"};","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from '../MovieItem/MovieItem.module.css';\n\nconst MovieItem = ({ id, title }) => {\n  const location = useLocation();\n  return (\n    <li className={styles.item}>\n      <NavLink\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={styles.link}\n      >\n        {title}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propType = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ films }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => {\n        return <MovieItem id={id} key={id} title={title} />;\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propType = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '3c9b3437ebab156a512248e157c99300';\n\nexport const getTrendFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchFilms = async searchValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchValue}`\n  );\n  return response.data.results;\n};\n\nexport const getFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getFilmCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__0xtbZ\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchFilms } from '../../services/FilmApi';\nimport { Notify } from 'notiflix';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport styles from './Movies.module.css';\n\nfunction Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [inputValue, setInputValue] = useState(query);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const searchMovies = async () => {\n      try {\n        const movies = await getSearchFilms(query);\n        setSearchQuery(movies);\n        if (movies.length === 0) {\n          return Notify.failure(`Sorry, we have no films named ${inputValue}`);\n        }\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    searchMovies();\n  }, [query, inputValue]);\n\n  const handleChange = event => {\n    setInputValue(event.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (inputValue === '') {\n      Notify.warning('Please, type something');\n      return;\n    }\n    setSearchParams({ query: inputValue });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={inputValue}\n          placeholder=\"start search\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">search</button>\n      </form>\n      {searchQuery.length > 0 && query && <MoviesList films={searchQuery} />}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["MovieItem","id","title","location","useLocation","className","styles","to","state","from","propType","PropTypes","MoviesList","films","map","axios","KEY","getTrendFilms","response","data","results","getSearchFilms","searchValue","getFilmDetails","movieId","getFilmCredits","cast","getFilmReviews","useState","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","inputValue","setInputValue","useEffect","searchMovies","movies","length","Notify","console","log","message","onSubmit","event","preventDefault","type","name","value","placeholder","onChange","target","toLowerCase"],"sourceRoot":""}