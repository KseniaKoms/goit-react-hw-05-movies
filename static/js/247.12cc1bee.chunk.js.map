{"version":3,"file":"static/js/247.12cc1bee.chunk.js","mappings":"+NA+CA,UA3Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAeJ,GAFtB,OAEVK,EAFU,OAGhBN,EAAQM,GAHQ,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBL,MACC,CAACH,IAQJ,OACE,yBACmB,IAAhBF,EAAKW,QACJ,yCAEA,wBACGX,EAAKY,KAAI,YAA4C,IAZ/CC,EAYMC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,2BACE,gBAAKC,KAfJL,EAegBE,EAdtBF,EAAM,0CAC0BA,GACnC,kFAYwCM,IAAKH,EAAMI,MAAM,SACjD,uBAAIJ,KACJ,uCAAeC,OAHRH,Y,0MChCvBO,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAa,mCAAG,oGACJF,IAAAA,IAAA,sCAAyCC,IADrC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,IAAAA,IAAA,gCACIC,EADJ,kBACiBM,IAFZ,cACtBJ,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,sDAOdG,EAAc,mCAAG,WAAM3B,GAAN,uFACLmB,IAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCoB,IADlC,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdnB,EAAc,mCAAG,WAAMJ,GAAN,uFACLmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKzB,MAFO,2CAAH,sDAKd8B,EAAc,mCAAG,WAAM5B,GAAN,uFACLmB,IAAAA,IAAA,iBAAoBnB,EAApB,4BAA+CoB,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH","sources":["components/Cast/Cast.jsx","services/FilmApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCredits } from 'services/FilmApi';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastInfo = async () => {\n      try {\n        const castInfo = await getFilmCredits(movieId);\n        setCast(castInfo);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getCastInfo();\n  }, [movieId]);\n\n  const poster = poster => {\n    return poster\n      ? ` https://image.tmdb.org/t/p/w500${poster}`\n      : 'https://www.freeiconspng.com/uploads/camera-icon-images--pictures--becuo-3.png';\n  };\n\n  return (\n    <div>\n      {cast.length === 0 ? (\n        <p>No cast info</p>\n      ) : (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => {\n            return (\n              <li key={id}>\n                <img src={poster(profile_path)} alt={name} width=\"100\" />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '3c9b3437ebab156a512248e157c99300';\n\nexport const getTrendFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchFilms = async searchValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchValue}`\n  );\n  return response.data.results;\n};\n\nexport const getFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getFilmCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getFilmReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCastInfo","getFilmCredits","castInfo","console","log","message","length","map","poster","id","profile_path","name","character","src","alt","width","axios","KEY","getTrendFilms","response","data","results","getSearchFilms","searchValue","getFilmDetails","getFilmReviews"],"sourceRoot":""}